webpackJsonp([1],{"6YGp":function(e,t){},"8/c5":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});n("InnB"),n("kV0w"),n("M4fF");var o={name:"page1",components:{},data:()=>({cWidth:400,cHeight:400,liList:"1",num1:1,htmlData:'<span style="color:red;">这是测试</span>',disabledData:void 0,testWord:"helloworld",testArr:[1,2,3,4],nowData:!0,name:{first:"first",end:"end"}}),methods:{handleChange(){}},mounted(){console.log(this),setTimeout(()=>{},1e3)},computed:{}},a={render:function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"container"},[n("pre",[e._v("        请开始你的表演\n        \n    ")]),e._v(" "),n("p",[e._v(e._s(e.name))]),e._v(" "),n("el-button",{on:{click:e.handleChange}},[e._v("按钮")]),n("br")],1)},staticRenderFns:[]};var s=n("VU/8")(o,a,!1,function(e){n("JkaM")},null,null);t.default=s.exports},"8AUC":function(e,t){},AZ1n:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});n("InnB"),n("kV0w");var o={name:"page1",components:{},data:()=>({}),methods:{},mounted(){console.log(this);let e=this;function t(t,n){console.log(e);let o=new Object;return o.name=t||"默认name",o.carId=(new Date).getTime(),o.sayName=function(){console.log("carObj.sayName："+this.name)},o}let n=t("这是啥");n.name="车B",n.sayName();let o=t();console.log(o),o.name="车B",console.log(o.sayName===n.sayName),console.log(window)}},a={render:function(){var e=this.$createElement;return(this._self._c||e)("div",{staticClass:"container"},[this._v("\n    工厂方式创建类与对象。\n")])},staticRenderFns:[]};var s=n("VU/8")(o,a,!1,function(e){n("wDAa")},null,null);t.default=s.exports},BLHN:function(e,t){},InnB:function(e,t,n){"use strict"},JkaM:function(e,t){},KWq4:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});n("InnB"),n("kV0w");var o={name:"page1",components:{},data:()=>({}),methods:{},mounted(){function e(e){this.name=e}e.prototype.sayName=function(){console.log("Car.prototype.sayName："+this.name)};let t=new e("车A"),n=new e("车B");console.log(t.sayName==n.sayName),t.sayName()}},a={render:function(){var e=this.$createElement;return(this._self._c||e)("div",{staticClass:"container"},[this._v("\n    构造函数方式创建类与对象。\n    混合构造函数：\n    属性在构造函数类方法中创建，方法用prototype方式创建。官方：用构造函数定义对象的所有非函数属性，用原型方式定义对象的函数属性。\n\n")])},staticRenderFns:[]};var s=n("VU/8")(o,a,!1,function(e){n("8AUC")},null,null);t.default=s.exports},KesE:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});n("InnB"),n("kV0w"),n("M4fF");var o={name:"page1",components:{},data:()=>({cWidth:400,cHeight:400,liList:"1",num1:1,htmlData:'<span style="color:red;">这是测试</span>',disabledData:void 0,testWord:"helloworld",testArr:[1,2,3,4],nowData:!0,name:{first:"first",end:"end"},texta:"这是textarea"}),methods:{handleChange(){}},mounted(){console.log(this),setTimeout(()=>{},1e3)},computed:{}},a={render:function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"container"},[n("pre",[e._v("        表单\n        1. 基础语法：v-model，本身是处理数据双向绑定的语法糖；vue中优先级高于value，checked，selected等值；\n        2. 表单元素：input textarea 复选框  单选框 select\n        3. 修饰符：\n            1. .lazy不会在input的时候实时出发，而是在change的时候触发\n            2. .number 转换为数值类型\n            3. .trim过滤首尾空格\n    ")]),e._v(" "),n("p",[e._v(e._s(e.name))]),e._v(" "),n("input",{directives:[{name:"model",rawName:"v-model.number",value:e.texta,expression:"texta",modifiers:{number:!0}}],attrs:{type:"number"},domProps:{value:e.texta},on:{input:function(t){t.target.composing||(e.texta=e._n(t.target.value))},blur:function(t){e.$forceUpdate()}}}),e._v(" "),n("el-button",{on:{click:e.handleChange}},[e._v("按钮")]),n("br"),e._v(" "),n("p",[e._v(e._s(e.texta))])],1)},staticRenderFns:[]};var s=n("VU/8")(o,a,!1,function(e){n("c1ce")},null,null);t.default=s.exports},NHnr:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=n("7+uW"),a={render:function(){var e=this.$createElement,t=this._self._c||e;return t("div",{attrs:{id:"app"}},[t("router-view")],1)},staticRenderFns:[]};var s=n("VU/8")({name:"App"},a,!1,function(e){n("vpQ9")},null,null).exports,r=n("/ocq"),i=n("8/c5"),l=n("fN1V");n("AZ1n"),n("KWq4"),n("Zu8a"),n("jly7"),n("yuNV"),n("v+zo"),n("YbPZ"),n("ijG0"),n("MdwX"),n("braz"),n("7t+N");o.default.use(r.a),o.default.component("c-button",{data:function(){return{count:0}},mounted(){console.log("全局c-button加载了")},template:'<button @click="count++">你点击了我{{ count }}次</button>'});var c=new r.a({routes:[{path:"/",name:"",component:l.default},{path:"/index",name:"index",component:i.default},{path:"/page1",name:"page1",component:l.default}]}),u=n("xdPp"),d=n.n(u),p=n("NRb0"),f=n.n(p),v=n("zL8q"),m=n.n(v);n("tvR6");let h=n("WHTK");o.default.config.productionTip=!1,o.default.use(m.a);const _=n("hKxC");_.keys().forEach(e=>{const t=_(e),n=d()(f()(e.replace(/^\.\/(.*)\.\w+$/,"$1")));console.log(n),o.default.component(n,t.default||t)});const g=n("Y9C/");console.log(g.keys());new o.default({el:"#app",router:c,components:{App:s},template:"<App/>",data:()=>({persen:h})})},Pexp:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o={name:"c-title",components:{},data:()=>({}),methods:{},mounted(){console.log("title组件加载")},computed:{}},a={render:function(){var e=this.$createElement;return(this._self._c||e)("div",[this._v("这是title\n")])},staticRenderFns:[]};var s=n("VU/8")(o,a,!1,function(e){n("w6p0")},null,null);t.default=s.exports},TPbc:function(e,t){},UbUP:function(e,t){},WHTK:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),n.d(t,"p1",function(){return a});function o(e,t){this.name=e,this.age=t}o.prototype.setName=function(e){this.name=e},o.prototype.getName=function(e){return this.name};let a=new o("司文宇","18")},"Y9C/":function(e,t,n){var o={"./index.vue":"8/c5","./page1.vue":"fN1V","./page11.vue":"AZ1n","./page12.vue":"KWq4","./page13.vue":"Zu8a","./page14.vue":"jly7","./page15.vue":"yuNV","./page16.vue":"v+zo","./page17.vue":"YbPZ","./page18.vue":"ijG0","./page19.vue":"KesE"};function a(e){return n(s(e))}function s(e){var t=o[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}a.keys=function(){return Object.keys(o)},a.resolve=s,e.exports=a,a.id="Y9C/"},YbPZ:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});n("InnB"),n("kV0w");var o={name:"page1",components:{},data:()=>({cWidth:400,cHeight:400,liList:"1",num1:1,htmlData:'<span style="color:red;">这是测试</span>',disabledData:void 0,testWord:"helloworld",testArr:[1,2,3,4],nowData:!0,name:{first:"first",end:"end"}}),methods:{handleChange(){this.num1=1*this.num1+1,this.nowData=!this.nowData}},mounted(){let e=this;console.log(this),setTimeout(()=>{e.name.first="设置"},1e3)},computed:{showName:{set:function(e){console.log("thisName"),console.log(e),this.name.first="set",this.name.end="set"},get(){return this.name.first+" "+this.name.end}},now(){if(this.nowData)return Date.now()}}},a={render:function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"container"},[n("pre",[e._v("    vue计算属性与监听器\n    计算属性（模板只是简单的声明式逻辑，原则上不建议进行较多的逻辑处理。需要处理的逻辑在计算属性中处理）\n    计算属性的key是全局data属性；该属性的值是一个setter函数，返回值是key的值；计算属性在mounted之前执行，setter中依赖（存在）的变量值update的时候执行；\n    计算属性缓存概念：setter中存在的变量update时，都会计算该计算属性；换句话说，如果没有变量update，变量就被缓存；所以使用要慎重，一般经常update的变量被依赖时，使用方法代替计算属性。\n    计算属性与方法：首次展现有依赖的使用计算属性；一般经常update的变量被依赖时，使用方法代替计算属性；交叉的可以使用其他变量中和。\n    计算属性与侦听属性(watch)：监听属性变化观察和响应数据update。如果一个数据受多个数据影响，使用computed，作用域内'高级变量'；如果一个数据影响多个数据，使用watch，作用域'内低级变量'。\n    计算属性的setter和getter：默认的函数是getter，也就是计算属性的get方法；如果设置了setter，可以在计算属性的值发生变化时触发，比如重置。\n    侦听器：当数据变化时，需要执行开销较大的操作，或者执行异步，优先考虑侦听器。\n    ")]),e._v(" "),n("p",[e._v(e._s(e.showName))]),e._v(" "),n("p",{directives:[{name:"show",rawName:"v-show",value:e.nowData,expression:"nowData"}]},[e._v(e._s(e.now))]),e._v(" "),n("el-button",{class:e.testWord.slice(1,2),attrs:{disabled:e.disabledData},on:{click:e.handleChange}},[e._v("按钮")]),n("br")],1)},staticRenderFns:[]};var s=n("VU/8")(o,a,!1,function(e){n("xUvd")},null,null);t.default=s.exports},ZPdz:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o={name:"c-content",components:{},props:{contentProps:{default:0,type:Number},"is-show":{default:!0,type:Boolean},arr:{default:[0],type:Array},obj:{default:{name:"name"},type:Object},name:{default:0,type:String}},data:()=>({}),methods:{},mounted(){console.log("content组件加载")},computed:{}},a={render:function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[e._v("这是content\n    "),n("p",[e._v(e._s(e.is-e.show)+"111"+e._s(e.name)+"11")]),e._v(" "),n("hr"),e._v(" "),e._l(e.arr,function(t){return n("p",[e._v("\n        "+e._s(t)+"\n    ")])}),e._v(" "),n("hr"),e._v(" "),e._l(e.obj,function(t){return n("p",[e._v("\n        "+e._s(t)+"\n    ")])})],2)},staticRenderFns:[]};var s=n("VU/8")(o,a,!1,function(e){n("xcIY")},null,null);t.default=s.exports},Zb6g:function(e,t){},Zu8a:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});n("InnB"),n("kV0w");var o={name:"page1",components:{},data:()=>({}),methods:{},mounted(){let e="hello";e+="world";console.log(["hello","world"].join(" "));var t=new Date;e="";for(var n=0;n<1e6;n++)e+="text";var o=new Date;function a(){this._strings_=new Array}console.log("Concatenation with plus: "+(o.getTime()-t.getTime())+" milliseconds"),a.prototype.append=function(e){this._strings_.push(e)},a.prototype.toString=function(){return this._strings_.join("")},a.prototype.aaaa=function(){console.log("aaaaa")};var s=new a;console.log(s),t=new Date;for(n=0;n<1e4;n++)s.append("text");s.toString();o=new Date,console.log("<br />Concatenation with StringBuffer: "+(o.getTime()-t.getTime())+" milliseconds");var r=function(){};r.prototype.aaaa=function(){},console.log(r.__proto__)}},a={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"container"},[t("pre",[this._v("    最常用常规的方法是构造函数和原型方式混合方法，举例如何选择构造函数方法。\n\n    字符串拼接\n    ")])])}]};var s=n("VU/8")(o,a,!1,function(e){n("BLHN")},null,null);t.default=s.exports},braz:function(e,t){},c1ce:function(e,t){},fN1V:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});n("InnB"),n("kV0w"),n("M4fF");var o={name:"page1",components:{ca:{template:"<p>局部注册组件</p>"}},data:()=>({cWidth:400,cHeight:400,liList:"1",num1:1,htmlData:'<span style="color:red;">这是测试</span>',disabledData:void 0,testWord:"helloworld",testArr:[1,2,3,4],nowData:!0,name:{first:"first",end:"end"},post:{name:"post"}}),methods:{handleChange(){}},mounted(){console.log(this),setTimeout(()=>{},1e3)},computed:{}},a={render:function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"container"},[n("pre",[e._v('        组件-mvvm的核心\n        1. 语法（全局）：Vue.component(\'name\',{template,data,method,mounted等})；let componentA = {\'name\',{template,data,method,mounted等};components:{\'component-a\': componentA};\n        2. 组件特点：名字唯一，创建在根节点，可以复用；组件复用的时候，所有的组件内部的变量都是组件作用域内的局部变量，多次复用的组件内部的变量分别维护。\n        3. 组件的组织：组件树。\n        3. 组件命名：连字符或者驼峰式。引用连字符都可以；建议全部使用连字符；\n        4. 全局组件和局部组件\n        5. 模块系统：\bexport导出，import导入；自动化：require.context(\'路径./component\', false是否查询子目录,匹配规则)；返回对象，使用list.keys()拿到每个组件名；也可以用这个方法拿到page下的文件。\n        6. props\n            1. 父到子组件通信，子组件接受的值。使用驼峰命名；静态传值和动态传值；\n            2. 语法：props: [\'title\', \'footer\']；props: {title:{default: \'title\', type: String}};type类型可以是数组：[String, Number]\n            3. 如果props是Number类型，使用动态传值，比如：:num="1"；如果是num="1"，则是按照字符串传值；\n            4. 布尔值也是这样，比如：isShow="false"，传进去的是一个字符串\'false\'，是转换之后是true，应该是:isShow="false"\n            5. 数组：:arr="[1,2,3]"；如果arr="[1,2,3]"，按照字符串规则解析数组，长度是字符串的长度；\n            6. 对象：:obj="{name:1,age:2}"；如果obj="{name:1,age:2}"，按照字符串规则解析，长度是字符串的长度；动态变量可以简写：v-bind="obj"\n            7. 传入对象的所有属性：v-bind="obj"; props:[\'name\',\'age\']；\n            7. type也可以是一个构造函数，\n            8. 注意 ：以上如果默认type不符合，vue会返回异常信息，比如：[Vue warn]: Invalid prop: type check failed for prop "arr". Expected Array, got String.；\n            9. props是单向数据流，父组件的值改变时，props会自动更新本身的数据，反过来则不会；并且在子组件中，不允许props发生改变，如果强制改变，会报警\n            比如：[Vue warn]: Avoid mutating a prop directly since the value will be overwritten whenever the parent component re-renders. Instead, use a data or computed property based on the prop\'s value. Prop being mutated: "name"；\n            解决办法：data中使用新的组件内部变量写逻辑，比如data中使用初始值，或者计算属性。\n            10. props的验证是在组件创建之前，所以computed中的变量在props中是不可用的。\n        7. 除了props以外，可以想子组件的根目录传递任何属性比如：isselect="haha"\n    ')]),e._v(" "),n("p",[e._v(e._s(e.name))]),e._v(" "),n("el-button",{on:{click:e.handleChange}},[e._v("按钮")]),n("br"),e._v(" "),n("c-button"),e._v(" "),n("ca"),e._v(" "),n("Content",e._b({attrs:{picker:"activated",obj:{name:1,age:2},arr:[1,2,3],isShow:!1,contentProps:22}},"Content",e.post,!1)),e._v(" "),n("Footer")],1)},staticRenderFns:[]};var s=n("VU/8")(o,a,!1,function(e){n("6YGp")},null,null);t.default=s.exports},hKxC:function(e,t,n){var o={"./content.vue":"ZPdz","./footer.vue":"mzkE","./title.vue":"Pexp"};function a(e){return n(s(e))}function s(e){var t=o[e];if(!(t+1))throw new Error("Cannot find module '"+e+"'.");return t}a.keys=function(){return Object.keys(o)},a.resolve=s,e.exports=a,a.id="hKxC"},i9UX:function(e,t){},ijG0:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});n("InnB"),n("kV0w");var o={name:"page1",components:{},data:()=>({cWidth:400,cHeight:400,liList:"1",num1:1,htmlData:'<span style="color:red;">这是测试</span>',disabledData:void 0,testWord:"helloworld",testArr:[1,2,3,4],nowData:!0,name:{first:"first",end:"end"},activeCla:{aaaaaa:!0}}),methods:{handleChange(){}},mounted(){console.log(this),setTimeout(()=>{},1e3)},computed:{}},a={render:function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"container"},[n("pre",[e._v("    样式相关：\n    class属性值是一个对象或者数组。数组最大，数组元素可以是对象，数组元素可以是三元表达式；对象可以是变量。\n    < :class=\"['aaaa']\" :class=\"{'asdasda': isTrue}\">demo</ >\n    组件上的class会被渲染在根目录上。\n    内联样式：不推荐使用。值是一个对象。每个键值对的属性值是驼峰命名的属性名或者是短横线的，短横线需要用''号；可以是对象；\n    :style=\"\"\n    vue会自动添加前缀 -webkit-\n    多重值，渲染被浏览器支持的。\n    ")]),e._v(" "),n("p",[e._v(e._s(e.name))]),e._v(" "),n("a",{class:["aaaa",{aaaa:"s"},e.activeCla]}),e._v(" "),n("a",{class:{aaaa:"s"}}),e._v(" "),n("el-button",{on:{click:e.handleChange}},[e._v("按钮")]),n("br")],1)},staticRenderFns:[]};var s=n("VU/8")(o,a,!1,function(e){n("i9UX")},null,null);t.default=s.exports},jly7:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});n("InnB"),n("kV0w");var o={name:"page1",components:{},data:()=>({cWidth:400,cHeight:400}),methods:{drawBg(){let e=this.$refs.canvasDemo;var t,n=e.getContext("2d"),o=window.devicePixelRatio||1,a=window.innerWidth,s=window.innerHeight,r=90,i=Math,l=0,c=2*i.PI,u=i.cos,d=i.random;function p(e,o){n.beginPath(),n.moveTo(e.x,e.y),n.lineTo(o.x,o.y);var a=o.x+(2*d()-.25)*r,i=function e(t){var n=t+(2*d()-1.1)*r;return n>s||n<0?e(t):n}(o.y);n.lineTo(a,i),n.closePath(),l-=c/-50,n.fillStyle="#"+(127*u(l)+128<<16|127*u(l+c/3)+128<<8|127*u(l+c/3*2)+128).toString(16),n.fill(),t[0]=t[1],t[1]={x:a,y:i}}e.width=a*o,e.height=s*o,n.scale(o,o),n.globalAlpha=.6,function(){for(n.clearRect(0,0,a,s),t=[{x:0,y:.7*s+r},{x:0,y:.7*s-r}];t[1].x<a+r;)p(t[0],t[1])}()}},mounted(){this.drawBg();let e=this;function t(){this.p1=!0}console.log(t.prototype);let n=new t;console.log(n.__proto__),t.prototype.getfnP1=function(){console.log("fn的p1属性")},new t,Object.prototype.sayName=function(){console.log(1)};console.log({}.__proto__),window.onresize=(()=>{e.drawBg()}),console.log(window.onresize)}},a={render:function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"container"},[t("pre",[this._v("    对象创建\n    同一个类（Object）创建的每一个实例（carA）都有同一个原型对象（Object.prototype，carA.__proto__）\n    所有的内置对象继承自Object类，都有同一个原型对象Object.prototype\n    Object.create()是es5创建对象的方法，不推荐使用，对象的原型是参数\n    如果通过原型继承创建一个新对象，原型对象是p，函数是inherit(p)。\n    ")]),this._v(" "),t("canvas",{ref:"canvasDemo"})])},staticRenderFns:[]};var s=n("VU/8")(o,a,!1,function(e){n("qPXB")},null,null);t.default=s.exports},kV0w:function(e,t,n){"use strict";n("InnB")},mzkE:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o={name:"c-footer",components:{},data:()=>({}),methods:{},mounted(){console.log("footer组件加载")},computed:{}},a={render:function(){var e=this.$createElement;return(this._self._c||e)("div",[this._v("这是footer\n")])},staticRenderFns:[]};var s=n("VU/8")(o,a,!1,function(e){n("TPbc")},null,null);t.default=s.exports},qPXB:function(e,t){},tvR6:function(e,t){},"v+zo":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});n("InnB"),n("kV0w");var o=n("Pexp"),a=n("M4fF"),s=n.n(a),r={name:"page1",components:{"s-title":o.default},data:()=>({cWidth:400,cHeight:400,liList:["1","2"],num1:1,htmlData:'<span style="color:red;">这是测试</span>',disabledData:void 0,testWord:"helloworld",testArr:[1,2,3,4],showInput:!1,obj:{name:"name111",age:"age111"}}),methods:{handleChange(e,t){console.log(111111),console.log(e),console.log(t),this.liList[1]="new",this.liList=s.a.cloneDeep(this.liList),console.log(this.liList)}},beforeCreate(){console.log("beforeCreate")},created(){console.log("created")},mounted(){console.log(this)},updated(){console.log("updated")},beforeUpdate(){console.log("beforepUdate")},beforeDestroy(){console.log("beforeDestroy")},destroyed(){console.log("destroyed")}},i={render:function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"container"},[n("pre",[e._v("    vue模板语法\n    1. 数据绑定Mustache语法(双大括号) ，只绑定一次（v-once）\n    2. v-html 输出真正的html代码，当成代码解析。容易到值xss攻击，只给信任的内容使用，比如不能给用户提供的内容使用\n    3. v-bind 绑定属性，可以省略。绑定的属性的值可以是变量值，也可以是变量名（前面加:）\n    4. v-on 监听dom事件\n        1. v-on:click/@click = \"hundle(aa)\"  aa是参数，如果不穿，默认是鼠标event；如果有实参，则第一个参数是实参；如果想继续使用$event，则使用$event作为实参；\n        6. 修饰符 \n            1. .连接的特殊后缀，支出一个指令以何种特殊方式绑定。\n            2. 类别：.stop组织冒泡；.prevent组织默认事件；.self只在dom本身触发 ；.capture捕获模式；.passive，不阻止默认行为；.exact精确修饰符\n            3. .stop.prevent可以连载；并且连载后的顺序很重要，会按照顺序执行。\n            4. 按键修饰符：.13 = .enter键；全部按键：.tab/.enter/.delete/.esc/.space/.up/.down/.left/.right；可以通过config.keyCode自定义按键修饰别名。Vue.config.keyCodes.f1 = 112;(有一些按键（esc）在IE9中的key值不同，如果要支持要hack)；系统修饰符;\n\n    4. 使用表达式：(1)一元，二元，三元表达式；js基础语法(字符串\\数组所有拼接，裁剪等)。\n    5. v-if v-show \n        1. v-if v-else v-else-if  \n        2. if else的切换过程中，可以用key管理需要缓存的元素，默认元素是相同的key；dom节点会缓存，属性会修改；现象：在dom中可以看到dom节点重新渲染还是属性chong新渲染；\n        3. v-show的元素始终会渲染在dom中，只是切换css的display属性；v-show不支持template元素，也不支持v-else\n        4. v-if惰性渲染：只有在值为true的时候才真正的渲染，为false的时候不渲染；\n        5. 性能：v-show初始化时开销较大；v-if切换时开销较大\n        6. v-if和v-for不推荐一起使用；v-for优先级更高，先循环，再渲染if逻辑；解决办法：定义一个计算属性，返回过滤if逻辑判断之后的新数组循环。\n    6. v-for列表渲染\n        1. 渲染数组或者对象，(value, key, index) in/of items的形式；\n            1. 如果是数组，只有value和index两个参数，没有key；\n            2. 如果是对象，有三个参数分别是value, key, index；\n            3. 如果是对象，使用Object.key()的结果遍历，在es5中有兼容问题，如果参数不是一个对象，会抛出typeerror的错误；但是工程会解决。\n        2. key缓存，如果已经有渲染过的相同key的相同元素，会就地复用。唯一标识的元素会在重排中高效复用。\n        3. 数组更新检测\n            1. 数组本身发生变化会触发更新：push,pop,shift,unshift,splice,sort,reverse；\n            2. 数组重新赋值。有些方法不会改变原始数组，但是会返回新的想要渲染的数组：filter,concat,slice；\n            3. 高效的检测更新：如果新数组和旧数组中有相同的元素，会就地复用。\n            4. 不能检测到的变动：\n                1. 利用索引设置一个元素的值：this.items[1] = 'new';\n                2. 直接操作修改数组长度时。this.items.length = 5;\n                3. 对象属性的增删改查。 \n                3. 如何解决这个问题：\n                    1. 使用Vue.set方法，Object.assign\n                    2. 使用能触发更新的方法代替完成相同操作\n                    3. 使用lodash等工具箱深度拷贝。cloneDeep;\n                    4. 显示排序或者其他结果：使用深度拷贝或者计算属性生成新的变量。\n        4. items可以是一个具体的整数n，表示从1开始循环至n\n    \n    7. 缩写：v-bind: -> :   v-on: -> @  \n    ")]),e._v(" "),n("s-title"),e._v(" "),n("ul",e._l(e.liList,function(t,o){return n("li",[e._v(e._s(t)+"-----"+e._s(o))])})),e._v(" "),n("p",[e._v(e._s(e.num1+"2222"))]),e._v(" "),n("p",{domProps:{innerHTML:e._s(e.testArr.indexOf(1))}}),e._v(" "),e.showInput?n("input",{key:"if",staticClass:"aaa",attrs:{aaa:Date(),placeholder:"if"}}):n("input",{key:"else",attrs:{placeholder:"else"}}),e._v(" "),n("el-button",{class:e.testWord.slice(1,2),attrs:{disabled:e.disabledData},on:{click:function(t){e.handleChange("aa",t)}}},[e._v("按钮")]),n("br"),e._v(" "),n("el-input-number",{attrs:{min:1,max:100,label:"描述文字"},on:{change:e.handleChange},model:{value:e.num1,callback:function(t){e.num1=t},expression:"num1"}})],1)},staticRenderFns:[]};var l=n("VU/8")(r,i,!1,function(e){n("Zb6g")},null,null);t.default=l.exports},vpQ9:function(e,t){},w6p0:function(e,t){},wDAa:function(e,t){},xUvd:function(e,t){},xcIY:function(e,t){},yuNV:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});n("InnB"),n("kV0w");var o=this,a={name:"page1",components:{"s-title":n("Pexp").default},data:()=>({cWidth:400,cHeight:400,liList:"1"}),methods:{plus:()=>{console.log(1111),console.log(o)}},beforeCreate(){console.log("beforeCreate")},created(){console.log("created")},mounted(){console.log(this)},updated(){console.log("updated")},beforeUpdate(){console.log("beforepUdate")},beforeDestroy(){console.log("beforeDestroy")},destroyed(){console.log("destroyed")}},s={render:function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"container"},[e._m(0),e._v(" "),n("s-title"),e._v(" "),n("ul",e._l(e.liList,function(t){return n("li",[e._v(e._s(t))])}))],1)},staticRenderFns:[function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[this._v("    之前遇到的问题：变量在dom中渲染，但是更新变量的值，并没有师徒更新。\n    因为没有在初始化数据对象data中注册这个值，只有注册了，这个变量的值再是双向绑定的。\n    如果有一些变量会在晚些才需要使用，可以先注册并给一个默认值；并且初始默认值的变量类型不需要考虑，如果arr是个数组，但是也可能是个字符串。\n\n\n    全局的对象，数据和方法：\n    在Vue实例声明的时候声明。\n\n    vue的生命周期：\n    1.创建：new Vue() -> Init(Event&Lifecycle事件和生命周期) -> 'beforeCreate' -> Init(双向绑定injections&reactivity)  -> 'created'\n    2.init：\n    3.mount：'beforeMount' -> 虚拟dom生成 -> 'mounted' -> dataChange(['beforeUpdate' <-> 'updated'])\n    4.destroy：'beforeDestroy' -> 'destroyed'\n    "),t("img",{attrs:{src:"https://cn.vuejs.org/images/lifecycle.png"}}),this._v("    ")])}]};var r=n("VU/8")(a,s,!1,function(e){n("UbUP")},null,null);t.default=r.exports}},["NHnr"]);
//# sourceMappingURL=app.d290220897769ff3a10a.js.map